name: CI # Continuous Integration

on:
    push:
        branches:
            - main
    pull_request:
    workflow_dispatch:

jobs:
    lint-check:
        name: Lint and Format Check
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Rust toolchain
              uses: dtolnay/rust-toolchain@stable
              with:
                components: rustfmt, clippy # Ensure components for fmt and lint are present

            - name: Cache Rust dependencies
              uses: Swatinem/rust-cache@v2

            - name: Initialize Project (Fetch dependencies, install pre-commit)
              run: make init

            - name: Check Formatting
              run: make fmt-check # Uses cargo fmt --check

            - name: Run Linters
              run: make lint # Uses cargo clippy

    build-and-test:
        name: Build and Test on {{ '${{ matrix.os }}' }}
        runs-on: {{ '${{ matrix.os }}' }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Rust toolchain
              uses: dtolnay/rust-toolchain@stable
              # No specific components needed for just build/test usually,
              # but specifying 'rustfmt' and 'clippy' here too doesn't hurt
              # and ensures they are available if any make target indirectly uses them.
              with:
                components: rustfmt, clippy

            - name: Cache Rust dependencies
              uses: Swatinem/rust-cache@v2

            - name: Initialize Project (Fetch dependencies, install pre-commit)
              run: make init

            - name: Build Project
              run: make build

            - name: Run Tests
              run: make test

            - name: Smoke Test (Run Application)
              run: make run
